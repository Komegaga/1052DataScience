method="neuralnet",   # 類神經網路(bpn)
# 最重要的步驟：觀察不同排列組合(第一層1~4個nodes ; 第二層0~4個nodes)
# 看何種排列組合(多少隱藏層、每層多少個node)，會有最小的RMSE
tuneGrid = expand.grid(.layer1=c(1:4), .layer2=c(0:4), .layer3=c(0)),
# 以下的參數設定，和上面的neuralnet內一樣
learningrate = 0.01,  # learning rate
threshold = 0.01,     # partial derivatives of the error function, a stopping criteria
stepmax = 5e5         # 最大的ieration數 = 500000(5*10^5)
)
model
plot(model)
pn <- neuralnet(formula = formula.bpn,
data = train,
hidden = c(1,2),     # 第一隱藏層1個node，第二隱藏層2個nodes
learningrate = 0.01, # learning rate
threshold = 0.01,    # partial derivatives of the error function, a stopping criteria
stepmax = 5e5        # 最大的ieration數 = 500000(5*10^5)
)
bpn <- neuralnet(formula = formula.bpn,
data = train,
hidden = c(1,2),     # 第一隱藏層1個node，第二隱藏層2個nodes
learningrate = 0.01, # learning rate
threshold = 0.01,    # partial derivatives of the error function, a stopping criteria
stepmax = 5e5        # 最大的ieration數 = 500000(5*10^5)
)
plot(bpn)
plot(bpn)
pred <- compute(bpn, test[, 1:4])
test[, 1:4]
?compute
pred$net.result
pred.result <- round(pred$net.result)
pred.result
pred.result <- as.data.frame(pred.result)
pred.result$Species <- ""
for(i in 1:nrow(pred.result)){
if(pred.result[i, 1]==1){ pred.result[i, "Species"] <- "setosa"}
if(pred.result[i, 2]==1){ pred.result[i, "Species"] <- "versicolor"}
if(pred.result[i, 3]==1){ pred.result[i, "Species"] <- "virginica"}
}
pred.result
pred.result$Species
table(real    = test$Species,
predict = pred.result$Species)
?table
table
library(ggplot2)
ggplot(mpg, aes(x = displ, y = hwy))
ggplot(mpg, aes(x = displ, y = hwy)) + geom_point(aes(colour = class))
mpg
clear
summary(mpg)
head(mpg)
sessionInfo()
install.packages("githubinstall")
i_f <- "test1.csv"
d <- read.csv(i_f)
d <- read.csv2(i_f)
d <- read.csv(i_f)
i_f <- "test1.csv"
d <- read.csv(i_f)
gewtd()
getwd()
system("Rscript hw1_105753032.R -files test.1.csv –out result.csv")
system("Rscript hw1_105753032.R -files test.1.csv –out result.csv")
system("Rscript hw1_105753032.R -files test.1.csv –out result.csv")
system("Rscript hw1_105753032.R -files test.1.csv –out result2.csv")
divide <- function(numerator, denominator) { numerator/denominator }
divide(2,1)
divide(denominator=2,numerator=1)
divide(denominator<-2,numerator<-1)  # yields 2, a wrong answer
clear
x<-1
good <- function() { x <- 5}
good()
print(x)
bad <- function() { x <<- 5}
bad()
print(x)
library(tidyverse)
ggplot(dota = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
fliter(mpg, cyl = 8)
filter(diamond, carat > 3)
library(tidyverse)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
fliter(mpg, cyl = 8)
filter(diamond, carat > 3)
install.packages("tidyverse")
library(tidyverse)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
fliter(mpg, cyl = 8)
filter(diamond, carat > 3)
library(tidyverse)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
fliter(mpg, cyl == 8)
filter(diamond, carat > 3)
library(tidyverse)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
filter(mpg, cyl == 8)
filter(diamonds, carat > 3)
c(T,T,F,F) == c(T,F,T,F)
c(T,T,F,F) & c(T,F,T,F)
c(T,T,F,F) | c(T,F,T,F)
c(T,T,F,F) && c(T,F,T,F)
c(T,T,F,F) && c(F,F,T,F)
c(F,T,F,F) && c(F,F,T,F)
c(F,T,T,T) && c(F,T,T,T)
c(T,T,F,F) == c(T,F,T,F)
identical(c(T,T,F,F),c(T,F,T,F))
all.equal(c(T,T,F,F),c(T,F,T,F))
class(c(1,2))
add <- function(a,b) { a + b}
add(1,2)
ls()
vec <- c(1,2)
fun <- function(v) { v[[2]]<-5; print(v)}
fun(vec)
print(vec)
vec <- c(1,2)
c[1]
vec[1]
vec <- c(1,2)
vec[[1]]
vec <- c(1,2)
fun <- function(v) { v[2]<-5; print(v)}
fun(vec)
1:10
1:2*5
1:(2*5)
rep(1,10)
rep(10,1)
e – VECTORS
a<-c(1:10)
length(a)
a[1]
a[[1]]
a[11]
a[[11]]
b<-c()
length(b)
is.null(b)
is.na(b)
c(6,'fred')
list(6,'fred')
list[1]
list[[1]
x <- list('a'=6,b='fred')
names(x)
x$a
x$b
x[['a']]
x <- list(a=6,b='fred')
names(x)
x$a
x$b
x[['a']]
c('a','b')[[7]]
c('a','b')[7]
list(a='b')['a']
list(a='b')[['a']]
list(a='b')['a']
list(a='b')[['a']]
list(a='b')['a']
list(a='b')[c('a','a')]
list(a='b')[[c('a','a')]]
b<-matrix(c(2,4,3,1,5,7), nrow=3,ncol=2)
b[1,2]
b
t(b)
cbind(b, b)
rbind(b, b)
d = data.frame(x=c(1,2,3), y=c('x','y','z'))
d[,1]
d
d[,'x']
d[['x']]
d$x
d[c(1,3),]
subset(d,c(T,F,T))
d[c(1,3)]
d = data.frame(x=c(1,2,3), y=c('x','y','z'))
str(d)
d
factor('red',levels=c('red','orange'))
factor('apple',levels=c('red','orange'))
uciCar <- read.table(  	# Note: 1
'http://www.win-vector.com/dfiles/car.data.csv', 	# Note: 2
sep=',', 	# Note: 3
header=T 	# Note: 4
)
head(uciCar)
uciCar$doors
?str
str(uciCar)
class(uciCar)
dim(uciCar)
d <- read.table(paste('http://archive.ics.uci.edu/ml/','machine-learning-databases/statlog/german/german.data',sep=''),stringsAsFactors=F,header=F)
head(d)
d
d$Good.Loan <- as.factor(ifelse(d$Good.Loan==1,'GoodLoan','BadLoan'))
d <- read.table(paste('http://archive.ics.uci.edu/ml/','machine-learning-databases/statlog/german/german.data'),sep='',stringsAsFactors=F,header=F)
d <- read.table(paste('http://archive.ics.uci.edu/ml/','machine-learning-databases/statlog/german/german.data'),sep=',',stringsAsFactors=F,header=F)
install.packages("knitr")
install.packages("knitr")
library(knitr)
knit('simple.Rmd')
library(knitr)
knit('simple.Rmd')
clear
library('rpart')
load('GCDData.RData')
model <- rpart(Good.Loan ~
Duration.in.month +
Installment.rate.in.percentage.of.disposable.income +
Credit.amount  +
Other.installment.plans,
data=d,
control=rpart.control(maxdepth=4),
method="class")
library('rpart')
load('GCDData.RData')
setwd("~/Google 雲端硬碟/graduate/1052/DataScience/1052DataScience/ass2")
setwd("~/Google 雲端硬碟/graduate/1052/DataScience/codes04")
spamD <- read.table('spamD.tsv',header=T,sep='\t')
spamTrain <- subset(spamD,spamD$rgroup>=10)
spamD
head(spamD)
?subset
spamD$rgroup
summary(spamD)
spamTrain <- subset(spamD,spamD$rgroup>=10)
spamTest <- subset(spamD,spamD$rgroup<10)
spamVars <- setdiff(colnames(spamD),list('rgroup','spam'))
spamVars
?setdiff
list('rgroup','spam')
spamFormula <- as.formula(paste('spam=="spam"',
paste(spamVars,collapse=' + '),sep=' ~ '))
spamFormula
spamVars
spamModel <- glm(spamFormula,family=binomial(link='logit'), data=spamTrain)
spamTrain$pred <- predict(spamModel,newdata=spamTrain, type='response')
spamTrain$pred
spamTest$pred <- predict(spamModel,newdata=spamTest, type='response')
spamTest
print(with(spamTest,table(y=spam,glmPred=pred>0.5)))
sample <- spamTest[c(7,35,224,327),c('spam','pred')]
print(sample)
sample <- spamTest[c(1,35,224,327),c('spam','pred')]
print(sample)
spamTest[c(1,35)]
setwd("~/Google 雲端硬碟/graduate/1052/DataScience/1052DataScience/ass2")
library(ROCR);
d <- read.table("method1.csv", header = T, sep = ",")
y <- d$reference
pred <- d$prediction
cM <- table(truth=y, prediction=pred>0.5)
cM <- table(truth=y, prediction=pred>0.3)
print(cM)
cM <- table(truth=d$reference, prediction=d$prediction>0.3)
cM <- table(truth=d$reference, prediction=d$prediction)
print(cM)
spamTest$pre
spamTest$pred>0.5
spamTest$spam
print(cM)
spamTest$pred
names<-c()
name <- method1
name <- "method1"
c(names, name)
names
names <- c(names, name)
names
cM <- table(truth=d$reference, prediction=d$prediction)
print(cM)
d$sensitivity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
d$sensitivity
View(d)
spamTrain$pred
sensitivity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
specificity <- cM[1, 1] / (cM[1, 1] + cM[1, 2])
precision <- cM[2, 2] / (cM[1, 2] + cM[2, 2])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
library('ROCR')
eval <- prediction(spamTest$pred,spamTest$spam)
plot(performance(eval,"tpr","fpr"))
print(attributes(performance(eval,'auc'))$y.values[[1]])
performance(eval,"tpr","fpr")
attributes(performance(eval,'auc'))
spamTest$spam
library('ROCR')
eval <- prediction(d$prediction,d$reference)
spamTest$pred
d$prediction
eval <- prediction(d$pred.score,d$reference)
plot(performance(eval,"tpr","fpr"))
print(attributes(performance(eval,'auc'))$y.values[[1]])
print(cM)
eval <- prediction(spamTest$pred,spamTest$spam)
print(attributes(performance(eval,'auc'))$y.values[[1]])
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
sens
sens
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
files <- "methods1.csv"
for(file in files)
{
name<-gsub(".csv", "", basename(file))
d<-read.table(file, header=T,sep=",")
if(query_m == "male"){
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
specificity <- cM[1, 1] / (cM[1, 1] + cM[1, 2])
precision <- cM[2, 2] / (cM[1, 2] + cM[2, 2])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
}
else if (query_m == "female") {
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[1, 1] / (cM[1, 2] + cM[1, 1])
specificity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
precision <- cM[1, 1] / (cM[1, 1] + cM[2, 1])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
} else {
stop(paste("ERROR: unknown query function", query_m))
}
# AUC evaluation
library('ROCR')
eval <- prediction(d$pred.score,d$reference)
AUC <- attributes(performance(eval,'auc'))$y.values[[1]]
sens<-c(sens, sensitivity)
spes<-c(spes, specificity)
F1s<-c(F1s, F1)
AUCs<-c(AUCs, AUC)
names<-c(names,name)
}
setwd("~/Google 雲端硬碟/graduate/1052/DataScience/1052DataScience/ass2")
files <- "methods1.csv"
for(file in files)
{
name<-gsub(".csv", "", basename(file))
d<-read.table(file, header=T,sep=",")
if(query_m == "male"){
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
specificity <- cM[1, 1] / (cM[1, 1] + cM[1, 2])
precision <- cM[2, 2] / (cM[1, 2] + cM[2, 2])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
}
else if (query_m == "female") {
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[1, 1] / (cM[1, 2] + cM[1, 1])
specificity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
precision <- cM[1, 1] / (cM[1, 1] + cM[2, 1])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
} else {
stop(paste("ERROR: unknown query function", query_m))
}
# AUC evaluation
library('ROCR')
eval <- prediction(d$pred.score,d$reference)
AUC <- attributes(performance(eval,'auc'))$y.values[[1]]
sens<-c(sens, sensitivity)
spes<-c(spes, specificity)
F1s<-c(F1s, F1)
AUCs<-c(AUCs, AUC)
names<-c(names,name)
}
files <- "method1.csv"
for(file in files)
{
name<-gsub(".csv", "", basename(file))
d<-read.table(file, header=T,sep=",")
if(query_m == "male"){
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
specificity <- cM[1, 1] / (cM[1, 1] + cM[1, 2])
precision <- cM[2, 2] / (cM[1, 2] + cM[2, 2])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
}
else if (query_m == "female") {
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[1, 1] / (cM[1, 2] + cM[1, 1])
specificity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
precision <- cM[1, 1] / (cM[1, 1] + cM[2, 1])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
} else {
stop(paste("ERROR: unknown query function", query_m))
}
# AUC evaluation
library('ROCR')
eval <- prediction(d$pred.score,d$reference)
AUC <- attributes(performance(eval,'auc'))$y.values[[1]]
sens<-c(sens, sensitivity)
spes<-c(spes, specificity)
F1s<-c(F1s, F1)
AUCs<-c(AUCs, AUC)
names<-c(names,name)
}
files <- "method1.csv"
query_m <- "male"
for(file in files)
{
name<-gsub(".csv", "", basename(file))
d<-read.table(file, header=T,sep=",")
if(query_m == "male"){
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
specificity <- cM[1, 1] / (cM[1, 1] + cM[1, 2])
precision <- cM[2, 2] / (cM[1, 2] + cM[2, 2])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
}
else if (query_m == "female") {
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[1, 1] / (cM[1, 2] + cM[1, 1])
specificity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
precision <- cM[1, 1] / (cM[1, 1] + cM[2, 1])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
} else {
stop(paste("ERROR: unknown query function", query_m))
}
# AUC evaluation
library('ROCR')
eval <- prediction(d$pred.score,d$reference)
AUC <- attributes(performance(eval,'auc'))$y.values[[1]]
sens<-c(sens, sensitivity)
spes<-c(spes, specificity)
F1s<-c(F1s, F1)
AUCs<-c(AUCs, AUC)
names<-c(names,name)
}
names<-c()
sens<-c()
spes<-c()
F1s<-c()
AUCs<-c()
files <- "method1.csv"
query_m <- "male"
for(file in files)
{
name<-gsub(".csv", "", basename(file))
d<-read.table(file, header=T,sep=",")
if(query_m == "male"){
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
specificity <- cM[1, 1] / (cM[1, 1] + cM[1, 2])
precision <- cM[2, 2] / (cM[1, 2] + cM[2, 2])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
}
else if (query_m == "female") {
cM <- table(truth=d$reference, prediction=d$prediction)
sensitivity <- cM[1, 1] / (cM[1, 2] + cM[1, 1])
specificity <- cM[2, 2] / (cM[2, 1] + cM[2, 2])
precision <- cM[1, 1] / (cM[1, 1] + cM[2, 1])
F1 <- 2 *  precision * sensitivity / (precision + sensitivity)
} else {
stop(paste("ERROR: unknown query function", query_m))
}
# AUC evaluation
library('ROCR')
eval <- prediction(d$pred.score,d$reference)
AUC <- attributes(performance(eval,'auc'))$y.values[[1]]
sens<-c(sens, sensitivity)
spes<-c(spes, specificity)
F1s<-c(F1s, F1)
AUCs<-c(AUCs, AUC)
names<-c(names,name)
}
names
sens
sens
ystem("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
?sapply
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
?data.frame
?data.frame
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
?sapply
system("Rscript hw2_105753032.R --target male --files method1.csv method2.csv --out result.csv")
system("Rscript hw2_105753032.R --target male --files method9.csv method2.csv  --out result.csv")
system("Rscript hw2_105753032.R --target male --files method9.csv method2.csv  --out result.csv")
system("Rscript hw2_105753032.R --target male --files method9.csv method2.csv  --out result.csv")
system("Rscript hw2_105753032.R --target female --files method9.csv method2.csv  --out result.csv")
